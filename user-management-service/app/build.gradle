buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.4.RELEASE'
        classpath 'com.bmuschko:gradle-docker-plugin:4.10.0'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'

bootJar {
    baseName = 'usermanagement-app'
    version = applicationVersion
    enabled = true
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.flywaydb:flyway-core:5.2.4'
    compile 'io.springfox:springfox-swagger2:2.8.0'
    compile 'io.springfox:springfox-swagger-ui:2.8.0'
    runtime 'org.postgresql:postgresql:42.2.5'
    compileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    testCompile 'junit:junit:4.12'
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task copyJar(type: Copy) {
    from file("$buildDir/libs")
    into file("$buildDir/docker")
}

task createDockerfile(type: Dockerfile) {
    dependsOn copyJar
    destFile = file("$buildDir/docker/Dockerfile")
    from 'openjdk:8-jre-alpine'
    copyFile 'usermanagement-app-0.1-SNAPSHOT.jar', '/app.jar'
    defaultCommand 'java', '-jar', '/app.jar'
    exposePort 8094
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = file("$buildDir/docker")
    tags.add('user-mng-service:ver2')
}
