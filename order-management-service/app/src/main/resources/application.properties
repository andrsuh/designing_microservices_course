# Application name is used by Eureka Service Discovery, identifying traces in Zipkin
spring.application.name=order-management-service
server.port=8091

# Database and Hibernate properties
database.schema.name=order_management
spring.datasource.url=jdbc:postgresql://localhost:5432/laundry_db
spring.datasource.username=laundry_db_user
spring.datasource.password=123
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.default_schema=${database.schema.name}
spring.flyway.schemas=${database.schema.name}

# Kafka properties
# property for activation kafka's consumer-beans. This beans are used by
# working app to interact with other services through kafka. Consumers are
# disabled in tests (will be mocked in next version of tests)
kafka.activateConsumers=true
kafka.bootstrapAddress=localhost:9092
# name of the topic to which laundry-management-service send it's messages through kafka.
# order-management-service is subscribed to this topic
laundry.management.topic.name=LaundryManagementEvents
laundry.management.listener.name=OrderManagementConsumerGroup
order.management.topic.name=OrderManagementEvents

# Zipkin & Sleuth properties
# This property says to send all created traces to Zipkin
spring.sleuth.sampler.probability=1.0
# We don't want to create new span for this scheduled job
spring.sleuth.scheduled.skipPattern=com.microservices.ordermanagement.app.scheduled.ScheduledEventSender
# We want to explicitly create spans for messaging
spring.sleuth.messaging.kafka.enabled=false