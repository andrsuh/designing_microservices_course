version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    build: ./kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      #Comma-separated list of listeners, and the host/ip and port to which Kafka binds to on which to listen
      KAFKA_LISTENERS: LISTENER_IN_DOCKER://kafka:29092, LISTENER_OUT_DOCKER://kafka:9092
      #This is the metadata thatâ€™s passed back to clients
      KAFKA_ADVERTISED_LISTENERS: LISTENER_IN_DOCKER://kafka:29092, LISTENER_OUT_DOCKER://localhost:9092
      #For the security protocol to use, per listener name.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_IN_DOCKER:PLAINTEXT, LISTENER_OUT_DOCKER:PLAINTEXT
      #To define which listener to use, specify KAFKA_INTER_BROKER_LISTENER_NAME.
      #The host/IP used must be accessible from the broker machine to others.
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_IN_DOCKER
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
  eureka:
    image: eureka-server
    ports:
      - "8761:8761"
  postgres:
    build: ./postgres
    ports:
      - "5432:5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      cluster.name: "docker-cluster"
      # Disables memory swapping (preferable for elastic
      bootstrap.memory_lock: "true"
      # Jvm heap size limits
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      TAKE_FILE_OWNERSHIP: "true"
      discovery.type: "single-node"
    ulimits:
      # Sets memory locks quantity unlimited
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      #Disables CORS
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  grafana:
    build: ./grafana/docker-build
    environment:
        index.name: "metrics-*"
        metrics_publish_rate: 10s
    ports:
      - 3000:3000
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
